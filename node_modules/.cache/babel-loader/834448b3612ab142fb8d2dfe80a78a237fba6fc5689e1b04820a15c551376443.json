{"ast":null,"code":"var _jsxFileName = \"/Users/apurupachintala/Documents/GitHub/portal-genai/src/components/DashboardContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Grid, Typography, Button, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogActions, DialogContent, DialogTitle, Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\nimport ProjectTable from \"./ProjectTable\";\nimport DashboardCard from \"./DashboardCard\";\nimport projectsIcon from \"../assets/images/projects.svg\";\nimport Chart from \"./Chart\";\nimport { getAllProjectDetails } from \"../services/apiService\";\nimport pptxgen from \"pptxgenjs\";\nimport bgImage from \"../assets/images/bg-AI.jpeg\";\nimport reportsIcon from \"../assets/images/reports.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = ({\n  theme,\n  primaryColor\n}) => {\n  _s();\n  const [totalProjects, setTotalProjects] = useState(0);\n  const [projectData, setProjectData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    managers: {},\n    statuses: {},\n    categories: {}\n  });\n  const isAllSelected = items => Object.values(items).every(Boolean);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getAllProjectDetails();\n        console.log(\"Project Data:\", data); // Ensure the data structure is as expected\n\n        setTotalProjects(data.length);\n        setProjectData(data);\n        const managerSet = new Set();\n        const statusSet = new Set();\n        const categorySet = new Set();\n        data.forEach(item => {\n          if (item.MANAGER_NM && typeof item.MANAGER_NM === 'string') {\n            managerSet.add(item.MANAGER_NM.trim());\n          }\n          if (item.CURRENT_PHASE && typeof item.CURRENT_PHASE === 'string') {\n            statusSet.add(item.CURRENT_PHASE.trim());\n          }\n          if (item.CATEGORY && typeof item.CATEGORY === 'string') {\n            categorySet.add(item.CATEGORY.trim());\n          }\n        });\n        setFilters({\n          managers: Object.fromEntries([...managerSet].map(key => [key, false])),\n          statuses: Object.fromEntries([...statusSet].map(key => [key, false])),\n          categories: Object.fromEntries([...categorySet].map(key => [key, false]))\n        });\n      } catch (error) {\n        console.error(\"Error fetching project details:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // const handleCheckboxChange = (filterType, value) => {\n  //     setFilters(prev => ({\n  //         ...prev,\n  //         [filterType]: {\n  //             ...prev[filterType],\n  //             [value]: !prev[filterType][value]\n  //         }\n  //     }));\n  // };\n\n  const handleCheckboxChange = (filterType, key, isChecked) => {\n    if (key === true || key === false) {\n      // If key is a boolean, toggle all\n      setFilters(prev => ({\n        ...prev,\n        [filterType]: Object.fromEntries(Object.keys(prev[filterType]).map(subKey => [subKey, key]))\n      }));\n    } else {\n      // If key is not a boolean, toggle individual\n      setFilters(prev => ({\n        ...prev,\n        [filterType]: {\n          ...prev[filterType],\n          [key]: isChecked\n        }\n      }));\n    }\n  };\n  const handleFilterSubmit = () => {\n    console.log('Filter applied with:', filters);\n    setOpen(false); // Close the dialog after submitting\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const stats = [{\n    title: \"Projects\",\n    value: totalProjects,\n    image: projectsIcon,\n    bgColor: \"#e7f5ff\"\n  }];\n  const generatePPT = async () => {\n    const pptx = new pptxgen();\n    // Set the presentation layout\n    pptx.layout = \"LAYOUT_WIDE\";\n\n    // Get the current date in MM/DD/YYYY format\n    const currentDate = new Date();\n    const formattedDate = `${(currentDate.getMonth() + 1).toString().padStart(2, \"0\")}/${currentDate.getDate().toString().padStart(2, \"0\")}/${currentDate.getFullYear()}`;\n\n    // Define the master slide layout\n    pptx.defineSlideMaster({\n      title: \"MASTER_SLIDE\",\n      background: {\n        color: \"FFFFFF\"\n      },\n      objects: [{\n        rect: {\n          x: 0,\n          y: 7,\n          w: \"100%\",\n          h: 0.25,\n          fill: {\n            color: \"1a3673\"\n          }\n        }\n      }, {\n        text: {\n          text: \"Elevance Health - Confidential\",\n          options: {\n            x: 5.7,\n            y: 7,\n            w: 5.5,\n            h: 0.25,\n            color: \"FFFFFF\",\n            fontSize: 12\n          }\n        }\n      }, {\n        image: {\n          path: \"/assets/images/logo-ppt.png\",\n          x: 12.3,\n          y: 6.4,\n          w: 0.65,\n          h: 0.55\n        }\n      }, {\n        text: {\n          text: `Date: ${formattedDate}`,\n          options: {\n            x: 11.3,\n            y: 0.1,\n            w: 5.5,\n            h: 0.65,\n            color: \"1a3673\",\n            fontSize: 12,\n            bold: true\n          }\n        }\n      }],\n      slideNumber: {\n        x: 0.3,\n        y: \"88%\",\n        color: \"1a3673\",\n        fontSize: 12\n      }\n    });\n\n    // Slide 1: Title Slide\n    const slide1 = pptx.addSlide({\n      masterName: \"MASTER_SLIDE\"\n    });\n    slide1.addText(\"EDA Gen AI â€“ Status Report\", {\n      x: 0.5,\n      y: 0.5,\n      fontSize: 28,\n      color: \"1a3673\",\n      fontFace: \"Sans Medium\"\n    });\n    slide1.addImage({\n      path: bgImage,\n      x: 0,\n      y: 1.0,\n      w: 13.34,\n      h: 5.4\n    });\n\n    // Slide 2: Table Slides with Pagination\n    const tableHeader = [[{\n      text: \"#\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Key Projects/ Milestone\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"left\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Assigned\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Manager\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Status\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Domain\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Date\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }, {\n      text: \"Category\",\n      options: {\n        fontSize: 14,\n        bold: true,\n        align: \"center\",\n        fill: \"1a3673\",\n        color: \"FFFFFF\"\n      }\n    }]];\n    const rowsPerSlide = 10; // Adjust this number to control rows per slide\n    const totalSlides = Math.ceil(projectData.length / rowsPerSlide);\n    for (let i = 0; i < totalSlides; i++) {\n      const slide2 = pptx.addSlide({\n        masterName: \"MASTER_SLIDE\"\n      });\n      slide2.addText(\"Project Status\", {\n        x: 0.5,\n        y: 0.5,\n        fontSize: 18,\n        bold: true,\n        color: \"1a3673\",\n        fontFace: \"Sans Medium\"\n      });\n      const startRow = i * rowsPerSlide;\n      const endRow = startRow + rowsPerSlide;\n      const tableRows = projectData.slice(startRow, endRow).map(project => [{\n        text: project.SL_NO,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.PRJ_NM,\n        options: {\n          align: \"left\"\n        }\n      }, {\n        text: project.LEAD_NM,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.MANAGER_NM,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.CURRENT_PHASE,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.LLM_PLATFORM,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.DEPLOYMENT_DT,\n        options: {\n          align: \"center\"\n        }\n      }, {\n        text: project.CATEGORY,\n        options: {\n          align: \"center\"\n        }\n      }]);\n      slide2.addTable([...tableHeader, ...tableRows], {\n        x: 0.5,\n        y: 1,\n        w: 12,\n        colW: [0.5, 5, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],\n        fontSize: 12,\n        border: {\n          pt: 1,\n          color: \"D9D9D9\"\n        },\n        valign: \"middle\"\n      });\n    }\n    pptx.writeFile(\"Project_Status_Report.pptx\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"flex-start\",\n      sx: {\n        p: 3\n      },\n      children: [stats.map((stat, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n          title: stat.title,\n          value: stat.value,\n          image: stat.image,\n          bgColor: stat.bgColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3\n          // onClick={generatePPT}\n          ,\n          onClick: handleOpen,\n          sx: {\n            borderRadius: 3,\n            p: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#e7f5ff\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            width: 200,\n            height: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 1,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: reportsIcon,\n              alt: \"Report Icon\",\n              style: {\n                width: 50,\n                height: 50,\n                objectFit: \"contain\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            fontWeight: \"bold\",\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            fontWeight: \"bold\",\n            sx: {\n              fontSize: \"16px\"\n            },\n            children: \"Click here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      theme: theme,\n      themeColor: primaryColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(false),\n      PaperProps: {\n        style: {\n          width: '90%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Filter Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontSize: \"1.0rem\",\n                fontWeight: \"bold\",\n                marginBottom: \"1.1rem\"\n              },\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isAllSelected(filters.managers),\n                    onChange: e => handleCheckboxChange('managers', null, e.target.checked, true),\n                    style: {\n                      transform: 'scale(0.75)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 17\n                  }, this),\n                  label: \"Select All Managers\",\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: \"0.9rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 29\n              }, this), Object.entries(filters.managers).map(([manager, checked]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                lg: 3,\n                sx: {\n                  paddingTop: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: checked,\n                    onChange: e => handleCheckboxChange('managers', manager, e.target.checked) // Pass event object\n                    ,\n                    style: {\n                      transform: 'scale(0.75)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 49\n                  }, this),\n                  label: manager,\n                  style: {\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    fontSize: \"0.9rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 41\n                }, this)\n              }, manager, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontSize: \"1.0rem\",\n                fontWeight: \"bold\",\n                marginBottom: \"1.1rem\"\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(filters.statuses).map(([status, checked]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                lg: 3,\n                sx: {\n                  paddingTop: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: checked,\n                    onChange: () => handleCheckboxChange('statuses', status),\n                    style: {\n                      transform: 'scale(0.75)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 54\n                  }, this),\n                  label: status,\n                  style: {\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    fontSize: \"0.9rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 41\n                }, this)\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontSize: \"1.0rem\",\n                fontWeight: \"bold\",\n                marginBottom: \"1.1rem\"\n              },\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(filters.categories).map(([category, checked]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                lg: 3,\n                sx: {\n                  paddingTop: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: checked,\n                    onChange: () => handleCheckboxChange('categories', category),\n                    style: {\n                      transform: 'scale(0.75)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 54\n                  }, this),\n                  label: category,\n                  style: {\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    fontSize: \"0.9rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 41\n                }, this)\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFilterSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardContent, \"vhb55w51VfztfE3dFg0GVNzyQmY=\");\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Typography","Button","Checkbox","FormGroup","FormControlLabel","Paper","Dialog","DialogActions","DialogContent","DialogTitle","Select","MenuItem","InputLabel","FormControl","ProjectTable","DashboardCard","projectsIcon","Chart","getAllProjectDetails","pptxgen","bgImage","reportsIcon","jsxDEV","_jsxDEV","DashboardContent","theme","primaryColor","_s","totalProjects","setTotalProjects","projectData","setProjectData","open","setOpen","filters","setFilters","managers","statuses","categories","isAllSelected","items","Object","values","every","Boolean","fetchData","data","console","log","length","managerSet","Set","statusSet","categorySet","forEach","item","MANAGER_NM","add","trim","CURRENT_PHASE","CATEGORY","fromEntries","map","key","error","handleCheckboxChange","filterType","isChecked","prev","keys","subKey","handleFilterSubmit","handleOpen","handleClose","stats","title","value","image","bgColor","generatePPT","pptx","layout","currentDate","Date","formattedDate","getMonth","toString","padStart","getDate","getFullYear","defineSlideMaster","background","color","objects","rect","x","y","w","h","fill","text","options","fontSize","path","bold","slideNumber","slide1","addSlide","masterName","addText","fontFace","addImage","tableHeader","align","rowsPerSlide","totalSlides","Math","ceil","i","slide2","startRow","endRow","tableRows","slice","project","SL_NO","PRJ_NM","LEAD_NM","LLM_PLATFORM","DEPLOYMENT_DT","addTable","colW","border","pt","valign","writeFile","children","container","spacing","justifyContent","sx","p","stat","index","fileName","_jsxFileName","lineNumber","columnNumber","elevation","onClick","borderRadius","display","flexDirection","alignItems","backgroundColor","textAlign","cursor","width","height","mb","src","alt","style","objectFit","variant","fontWeight","themeColor","onClose","PaperProps","xs","gutterBottom","marginBottom","sm","md","lg","control","checked","onChange","e","target","transform","label","entries","manager","paddingTop","whiteSpace","overflow","textOverflow","status","category","_c","$RefreshReg$"],"sources":["/Users/apurupachintala/Documents/GitHub/portal-genai/src/components/DashboardContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    Box,\n    Grid,\n    Typography, Button, Checkbox, FormGroup, FormControlLabel,\n    Paper, Dialog, DialogActions, DialogContent, DialogTitle, Select, MenuItem, InputLabel, FormControl\n} from \"@mui/material\";\nimport ProjectTable from \"./ProjectTable\";\nimport DashboardCard from \"./DashboardCard\";\nimport projectsIcon from \"../assets/images/projects.svg\";\nimport Chart from \"./Chart\";\nimport { getAllProjectDetails } from \"../services/apiService\";\nimport pptxgen from \"pptxgenjs\";\nimport bgImage from \"../assets/images/bg-AI.jpeg\";\nimport reportsIcon from \"../assets/images/reports.svg\";\n\n\nconst DashboardContent = ({\n    theme,\n    primaryColor\n}) => {\n    const [totalProjects, setTotalProjects] = useState(0);\n    const [projectData, setProjectData] = useState([]);\n    const [open, setOpen] = useState(false);\n\n    const [filters, setFilters] = useState({\n        managers: {},\n        statuses: {},\n        categories: {}\n    });\n\n    const isAllSelected = (items) => Object.values(items).every(Boolean);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await getAllProjectDetails();\n                console.log(\"Project Data:\", data);  // Ensure the data structure is as expected\n\n                setTotalProjects(data.length);\n                setProjectData(data);\n\n                const managerSet = new Set();\n                const statusSet = new Set();\n                const categorySet = new Set();\n\n                data.forEach(item => {\n                    if (item.MANAGER_NM && typeof item.MANAGER_NM === 'string') {\n                        managerSet.add(item.MANAGER_NM.trim());\n                    }\n                    if (item.CURRENT_PHASE && typeof item.CURRENT_PHASE === 'string') {\n                        statusSet.add(item.CURRENT_PHASE.trim());\n                    }\n                    if (item.CATEGORY && typeof item.CATEGORY === 'string') {\n                        categorySet.add(item.CATEGORY.trim());\n                    }\n                });\n\n                setFilters({\n                    managers: Object.fromEntries([...managerSet].map(key => [key, false])),\n                    statuses: Object.fromEntries([...statusSet].map(key => [key, false])),\n                    categories: Object.fromEntries([...categorySet].map(key => [key, false])),\n                });\n\n            } catch (error) {\n                console.error(\"Error fetching project details:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n\n    // const handleCheckboxChange = (filterType, value) => {\n    //     setFilters(prev => ({\n    //         ...prev,\n    //         [filterType]: {\n    //             ...prev[filterType],\n    //             [value]: !prev[filterType][value]\n    //         }\n    //     }));\n    // };\n\n    const handleCheckboxChange = (filterType, key, isChecked) => {\n        if (key === true || key === false) {\n            // If key is a boolean, toggle all\n            setFilters(prev => ({\n                ...prev,\n                [filterType]: Object.fromEntries(Object.keys(prev[filterType]).map(subKey => [subKey, key]))\n            }));\n        } else {\n            // If key is not a boolean, toggle individual\n            setFilters(prev => ({\n                ...prev,\n                [filterType]: {\n                    ...prev[filterType],\n                    [key]: isChecked\n                }\n            }));\n        }\n    };\n\n\n\n    const handleFilterSubmit = () => {\n        console.log('Filter applied with:', filters);\n        setOpen(false); // Close the dialog after submitting\n    };\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const stats = [\n        { title: \"Projects\", value: totalProjects, image: projectsIcon, bgColor: \"#e7f5ff\" },\n    ];\n\n\n    const generatePPT = async () => {\n        const pptx = new pptxgen();\n        // Set the presentation layout\n        pptx.layout = \"LAYOUT_WIDE\";\n\n        // Get the current date in MM/DD/YYYY format\n        const currentDate = new Date();\n        const formattedDate = `${(currentDate.getMonth() + 1)\n            .toString()\n            .padStart(2, \"0\")}/${currentDate\n                .getDate()\n                .toString()\n                .padStart(2, \"0\")}/${currentDate.getFullYear()}`;\n\n        // Define the master slide layout\n        pptx.defineSlideMaster({\n            title: \"MASTER_SLIDE\",\n            background: { color: \"FFFFFF\" },\n            objects: [\n                { rect: { x: 0, y: 7, w: \"100%\", h: 0.25, fill: { color: \"1a3673\" } } },\n                {\n                    text: {\n                        text: \"Elevance Health - Confidential\",\n                        options: { x: 5.7, y: 7, w: 5.5, h: 0.25, color: \"FFFFFF\", fontSize: 12 },\n                    },\n                },\n                {\n                    image: {\n                        path: \"/assets/images/logo-ppt.png\",\n                        x: 12.3,\n                        y: 6.4,\n                        w: 0.65,\n                        h: 0.55,\n                    },\n                },\n                {\n                    text: {\n                        text: `Date: ${formattedDate}`,\n                        options: { x: 11.3, y: 0.1, w: 5.5, h: 0.65, color: \"1a3673\", fontSize: 12, bold: true },\n                    },\n                },\n            ],\n            slideNumber: { x: 0.3, y: \"88%\", color: \"1a3673\", fontSize: 12 },\n        });\n\n        // Slide 1: Title Slide\n        const slide1 = pptx.addSlide({ masterName: \"MASTER_SLIDE\" });\n        slide1.addText(\"EDA Gen AI â€“ Status Report\", {\n            x: 0.5,\n            y: 0.5,\n            fontSize: 28,\n            color: \"1a3673\",\n            fontFace: \"Sans Medium\",\n        });\n        slide1.addImage({ path: bgImage, x: 0, y: 1.0, w: 13.34, h: 5.4 });\n\n        // Slide 2: Table Slides with Pagination\n        const tableHeader = [\n            [\n                { text: \"#\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                {\n                    text: \"Key Projects/ Milestone\",\n                    options: { fontSize: 14, bold: true, align: \"left\", fill: \"1a3673\", color: \"FFFFFF\" },\n                },\n                { text: \"Assigned\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                { text: \"Manager\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                { text: \"Status\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                { text: \"Domain\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                { text: \"Date\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n                { text: \"Category\", options: { fontSize: 14, bold: true, align: \"center\", fill: \"1a3673\", color: \"FFFFFF\" } },\n\n            ],\n        ];\n\n        const rowsPerSlide = 10; // Adjust this number to control rows per slide\n        const totalSlides = Math.ceil(projectData.length / rowsPerSlide);\n\n        for (let i = 0; i < totalSlides; i++) {\n            const slide2 = pptx.addSlide({ masterName: \"MASTER_SLIDE\" });\n            slide2.addText(\"Project Status\", {\n                x: 0.5,\n                y: 0.5,\n                fontSize: 18,\n                bold: true,\n                color: \"1a3673\",\n                fontFace: \"Sans Medium\",\n            });\n\n            const startRow = i * rowsPerSlide;\n            const endRow = startRow + rowsPerSlide;\n\n            const tableRows = projectData.slice(startRow, endRow).map((project) => [\n                { text: project.SL_NO, options: { align: \"center\" } },\n                { text: project.PRJ_NM, options: { align: \"left\" } },\n                { text: project.LEAD_NM, options: { align: \"center\" } },\n                { text: project.MANAGER_NM, options: { align: \"center\" } },\n                { text: project.CURRENT_PHASE, options: { align: \"center\" } },\n                { text: project.LLM_PLATFORM, options: { align: \"center\" } },\n                { text: project.DEPLOYMENT_DT, options: { align: \"center\" } },\n                { text: project.CATEGORY, options: { align: \"center\" } },\n\n            ]);\n\n            slide2.addTable([...tableHeader, ...tableRows], {\n                x: 0.5,\n                y: 1,\n                w: 12,\n                colW: [0.5, 5, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],\n                fontSize: 12,\n                border: { pt: 1, color: \"D9D9D9\" },\n                valign: \"middle\",\n            });\n        }\n        pptx.writeFile(\"Project_Status_Report.pptx\");\n    };\n\n    return (\n        <Box>\n            <Grid container spacing={3} justifyContent=\"flex-start\" sx={{ p: 3 }}>\n                {stats.map((stat, index) => (\n                    <Grid item key={index}>\n                        <DashboardCard\n                            title={stat.title}\n                            value={stat.value}\n                            image={stat.image}\n                            bgColor={stat.bgColor} />\n                    </Grid>\n                ))}\n\n                <Grid item>\n                    <Paper\n                        elevation={3}\n                        // onClick={generatePPT}\n                        onClick={handleOpen}\n                        sx={{\n                            borderRadius: 3,\n                            p: 2,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            backgroundColor: \"#e7f5ff\",\n                            textAlign: \"center\",\n                            cursor: \"pointer\",\n                            width: 200,\n                            height: 150,\n                        }}\n                    >\n                        <Box mb={1}>\n                            <img\n                                src={reportsIcon}\n                                alt=\"Report Icon\"\n                                style={{\n                                    width: 50,\n                                    height: 50,\n                                    objectFit: \"contain\",\n                                }} />\n                        </Box>\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" fontWeight=\"bold\">\n                            Reports\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\" sx={{ fontSize: \"16px\" }}>\n                            Click here\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <ProjectTable />\n            <Chart theme={theme} themeColor={primaryColor} />\n\n            <Dialog open={open} onClose={() => setOpen(false)} PaperProps={{ style: { width: '90%' } }}>\n                <DialogTitle>Filter Options</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: \"1.0rem\", fontWeight: \"bold\", marginBottom: \"1.1rem\" }}>Manager</Typography>\n                            <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\n        <FormControlLabel\n            control={\n                <Checkbox\n                    checked={isAllSelected(filters.managers)}\n                    onChange={(e) => handleCheckboxChange('managers', null, e.target.checked, true)}\n                    style={{ transform: 'scale(0.75)' }}\n                />\n            }\n            label=\"Select All Managers\"\n            style={{ fontWeight: 'bold', fontSize: \"0.9rem\" }}\n        />\n    </Grid>\n                                {Object.entries(filters.managers).map(([manager, checked]) => (\n                                    <Grid item xs={12} sm={6} md={4} lg={3} key={manager} sx={{ paddingTop: 0 }}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={checked}\n                                                    onChange={(e) => handleCheckboxChange('managers', manager, e.target.checked)} // Pass event object\n                                                    style={{ transform: 'scale(0.75)' }}\n                                                />\n                                            }\n                                            label={manager}\n                                            style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', fontSize: \"0.9rem\" }}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: \"1.0rem\", fontWeight: \"bold\", marginBottom: \"1.1rem\" }}>Status</Typography>\n                            <Grid container spacing={2}>\n                                {Object.entries(filters.statuses).map(([status, checked]) => (\n                                    <Grid item xs={12} sm={6} md={4} lg={3} key={status} sx={{ paddingTop: 0 }}>\n                                        <FormControlLabel\n                                            control={<Checkbox checked={checked} onChange={() => handleCheckboxChange('statuses', status)} style={{ transform: 'scale(0.75)' }} />}\n                                            label={status}\n                                            style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', fontSize: \"0.9rem\" }}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: \"1.0rem\", fontWeight: \"bold\", marginBottom: \"1.1rem\" }}>Category</Typography>\n                            <Grid container spacing={2}>\n                                {Object.entries(filters.categories).map(([category, checked]) => (\n                                    <Grid item xs={12} sm={6} md={4} lg={3} key={category} sx={{ paddingTop: 0 }}>\n                                        <FormControlLabel\n                                            control={<Checkbox checked={checked} onChange={() => handleCheckboxChange('categories', category)} style={{ transform: 'scale(0.75)' }} />}\n                                            label={category}\n                                            style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', fontSize: \"0.9rem\" }}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>Close</Button>\n                    <Button onClick={handleFilterSubmit}>Submit</Button>\n                </DialogActions>\n            </Dialog>\n\n        </Box>\n    );\n};\n\nexport default DashboardContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}